{"version":3,"sources":["highlight.tsx","widgets.tsx","index.tsx"],"names":["highlight_return","common_data","$","data","specific_data","this","db_data","tablename","highlights","find","map","get","length","JSON","stringify","highlight","sel","window","getSelection","selectedNodes","range","node","startContainer","endNode","endContainer","rangeNodes","push","nextNode","commonAncestorContainer","unshift","parentNode","getRangeSelectedNodes","getRangeAt","visited_nodes","forEach","element","nodeType","Node","TEXT_NODE","ELEMENT_NODE","classList","contains","includes","toggleClass","removeAllRanges","hasChildNodes","firstChild","nextSibling","checkbox_return","prop","state","get_component_values","values","concat","Streamlit","events","addEventListener","RENDER_EVENT","event","detail","html","args","on","setComponentValue","setFrameHeight","setComponentReady"],"mappings":"sLAEO,SAASA,IACZ,IAAIC,EAAcC,IAAE,yBAAyBC,OACzCC,EAAgBF,IAAEG,MAAMF,OAExBG,EAAO,2BAAQL,GAAgBG,UAC5BE,EAAO,KAEd,IAAIC,EAAYD,EAAO,iBAChBA,EAAO,UAEd,IAAIE,EAAaN,IAAEG,MAAMI,KAAK,4BAA4BC,KAAI,WAC1D,OAAOR,IAAEG,MAAMF,QAChBQ,MAIH,MAAO,CACH,IAHOH,EAAWI,OAAS,EAAK,MAAQ,SAIxC,UAAcL,EACd,KAASD,EACT,MAAUO,KAAKC,UAAUN,IAI1B,SAASO,IACZ,IAAIC,EAAMC,OAAOC,eACjB,GAAIF,EAAK,CACL,IACIG,EAiCZ,SAA+BC,GAC3B,IAAIC,EAAOD,EAAME,eACbC,EAAUH,EAAMI,aAGpB,GAAIH,GAAQE,EACR,MAAO,CAACF,GAIZ,IAAII,EAAa,GACjB,KAAOJ,GAAQA,GAAQE,GACnBE,EAAWC,KAAKL,EAAOM,EAASN,IAIpCA,EAAOD,EAAME,eACb,KAAOD,GAAQA,GAAQD,EAAMQ,yBACzBH,EAAWI,QAAQR,GACnBA,EAAOA,EAAKS,WAGhB,OAAOL,EAvDiBM,CADRf,EAAIgB,WAAW,IAEvBC,EAAgB,GACpBd,EAAce,SAAQ,SAAAC,GAIlB,GAHIA,EAAQC,WAAaC,KAAKC,YAC1BH,EAAUA,EAAQL,YAElBK,EAAQC,WAAaC,KAAKE,cAAgBJ,EAAQK,UAAUC,SAAS,iBAAkB,CACvF,GAAIR,EAAcS,SAASP,GACvB,MAAO,GAEXF,EAAcP,KAAKS,GACnBjC,IAAEiC,GAASQ,YAAY,iBAI/B3B,EAAI4B,mBAIZ,SAASjB,EAASN,GACd,GAAIA,EAAKwB,gBACL,OAAOxB,EAAKyB,WAEZ,KAAOzB,IAASA,EAAK0B,aACjB1B,EAAOA,EAAKS,WAEhB,OAAKT,EAGEA,EAAK0B,YAFD,KCtCZ,SAASC,IACZ,IAAI/C,EAAcC,IAAE,yBAAyBC,OACzCC,EAAgBF,IAAEG,MAAMF,OACxBG,EAAO,2BAAQL,GAAgBG,UAC5BE,EAAO,KAEd,IAAIC,EAAYD,EAAO,UAGvB,cAFOA,EAAO,UAEP,CACH,IAAOJ,IAAEG,MAAM4C,KAAK,WAAa,MAAQ,SACzC,UAAa1C,EACb,KAAQD,EACR,MAAS,GC3BjB,IAAI4C,EAAQ,OAOZ,SAASC,IACL,IAAIC,EAAS,GAIb,OAFAA,GADAA,EAASA,EAAOC,OAAOnD,IAAE,2BAA2BQ,IAAIsC,GAAiBrC,QACzD0C,OAAOnD,IAAE,cAAcQ,IAAIV,GAAkBW,OAwCjE2C,IAAUC,OAAOC,iBAAiBF,IAAUG,cAZ5C,SAAkBC,GACd,IAAMvD,EAAQuD,EAAkCC,OACnC,WAATT,GAIJhD,IAAE,WAAW0D,KAAKzD,EAAK0D,KAAL,MAzClB3D,IAAE,cAAc4D,GAAG,UAAW/C,GAa9Bb,IAAE,aAAa4D,GAAG,SAAS,WACvB,IAAIV,EAASD,IACbG,IAAUS,kBAAkB,CACxB,MAAS,EACT,MAAS,EACT,OAAWX,IAGfF,EAAQ,aAGZhD,IAAE,SAAS4D,GAAG,SAAS,WACnB,IAAIV,EAASD,IACbG,IAAUS,kBAAkB,CACxB,MAAS,EACT,MAAS,EACT,OAAWX,IAEfF,EAAQ,aAaZI,IAAUU,kBANNd,EAAQ,UAUhBI,IAAUW,oBACVX,IAAUU,kB","file":"static/js/main.1a9b0eb5.chunk.js","sourcesContent":["import $ from \"jquery\"\n\nexport function highlight_return() {\n    let common_data = $(\"div[data-type=common]\").data();\n    let specific_data = $(this).data();\n\n    let db_data = { ...common_data, ...specific_data };\n    delete db_data[\"type\"];\n\n    let tablename = db_data[\"tablename\"];\n    delete db_data[\"tablename\"];\n\n    let highlights = $(this).find(\".highlightable.rationale\").map(function() {\n        return $(this).data;\n    }).get();\n\n    let api = (highlights.length > 0) ? \"add\" : \"delete\";\n\n    return {\n        \"api\" : api,\n        \"tablename\" : tablename,\n        \"keys\" : db_data,\n        \"value\" : JSON.stringify(highlights)\n    }\n} \n\nexport function highlight() {\n    var sel = window.getSelection();\n    if (sel) {\n        var range = sel.getRangeAt(0);\n        var selectedNodes = getRangeSelectedNodes(range);\n        var visited_nodes = [];\n        selectedNodes.forEach(element => {\n            if (element.nodeType === Node.TEXT_NODE) {\n                element = element.parentNode;\n            }\n            if (element.nodeType === Node.ELEMENT_NODE && element.classList.contains(\"highlightable\")) {\n                if (visited_nodes.includes(element)) {\n                    return [];\n                }\n                visited_nodes.push(element);\n                $(element).toggleClass(\"rationale\");\n            }\n        });\n\n        sel.removeAllRanges();\n    }\n};\n\nfunction nextNode(node) {\n    if (node.hasChildNodes()) {\n        return node.firstChild;\n    } else {\n        while (node && !node.nextSibling) {\n            node = node.parentNode;\n        }\n        if (!node) {\n            return null;\n        }\n        return node.nextSibling;\n    }\n}\n\nfunction getRangeSelectedNodes(range) {\n    var node = range.startContainer;\n    var endNode = range.endContainer;\n\n    // Special case for a range that is contained within a single node\n    if (node == endNode) {\n        return [node];\n    }\n\n    // Iterate nodes until we hit the end container\n    var rangeNodes = [];\n    while (node && node != endNode) {\n        rangeNodes.push(node = nextNode(node));\n    }\n\n    // Add partially selected nodes at the start of the range\n    node = range.startContainer;\n    while (node && node != range.commonAncestorContainer) {\n        rangeNodes.unshift(node);\n        node = node.parentNode;\n    }\n\n    return rangeNodes;\n}","import $ from \"jquery\"\n\nexport function select_return() {\n    let common_data = $(\"div[data-type=common]\").data();\n    let specific_data = $(this).data();\n    let db_data = { ...common_data, ...specific_data };\n    delete db_data[\"type\"];\n\n    let tablename = db_data[\"tablename\"];\n    delete db_data[\"tablename\"]\n\n    return {\n        \"api\": $(this).find(\":selected\").val() ? \"add\" : \"delete\",\n        \"tablename\": tablename,\n        \"keys\": db_data,\n        \"value\": $(this).find(\":selected\").val()\n    }\n}\n\nexport function checkbox_return() {\n    let common_data = $(\"div[data-type=common]\").data();\n    let specific_data = $(this).data();\n    let db_data = { ...common_data, ...specific_data };\n    delete db_data[\"type\"];\n\n    let tablename = db_data[\"tablename\"];\n    delete db_data[\"tablename\"]\n\n    return {\n        \"api\": $(this).prop(\"checked\") ? \"add\" : \"delete\",\n        \"tablename\": tablename,\n        \"keys\": db_data,\n        \"value\": 1\n    }\n}","import { Streamlit, RenderData } from \"streamlit-component-lib\"\nimport $ from \"jquery\"\nimport { highlight, highlight_return } from \"./highlight\"\nimport { checkbox_return, select_return } from \"./widgets\"\n\nlet state = \"idle\";\n\nfunction setup() {\n    $(\".highlight\").on(\"mouseup\", highlight);\n}\n\n\nfunction get_component_values() {\n    let values = [];\n    values = values.concat($(\"input[type=checkbox].db\").map(checkbox_return).get());\n    values = values.concat($(\".highlight\").map(highlight_return).get());\n    // values.concat($(\"select.db\").map(element => select_return(element)));\n    return values;\n};\n\nfunction onstreamlitupdate() {\n    $(\"#savenext\").on(\"click\", function(){\n        let values = get_component_values();\n        Streamlit.setComponentValue({\n            \"done\" : true,\n            \"next\" : true,\n            \"values\" : values\n        });\n\n        state = \"clicked\";\n    });\n\n    $(\"#save\").on(\"click\", function(){\n        let values = get_component_values();\n        Streamlit.setComponentValue({\n            \"done\" : true,\n            \"next\" : false,\n            \"values\" : values\n        });\n        state = \"clicked\";\n    });\n};\n\nfunction onRender(event: Event): void {\n    const data = (event as CustomEvent<RenderData>).detail\n    if (state == \"clicked\") {\n        state = \"idle\";\n        return;\n    }\n    $(\"#docdiv\").html(data.args[\"data\"]);\n    setup();\n    onstreamlitupdate();\n    Streamlit.setFrameHeight()\n}\n\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\nStreamlit.setComponentReady()\nStreamlit.setFrameHeight()"],"sourceRoot":""}