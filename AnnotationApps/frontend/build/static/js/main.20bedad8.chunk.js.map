{"version":3,"sources":["highlight.tsx","widgets.tsx","index.tsx"],"names":["highlight_return","common_data","$","data","specific_data","this","db_data","tablename","find","map","classList","contains","get","highlight","sel","window","getSelection","selectedNodes","range","node","startContainer","endNode","endContainer","rangeNodes","push","nextNode","commonAncestorContainer","unshift","parentNode","getRangeSelectedNodes","getRangeAt","visited_nodes","forEach","element","nodeType","Node","TEXT_NODE","ELEMENT_NODE","includes","toggleClass","removeAllRanges","hasChildNodes","firstChild","nextSibling","checkbox_return","prop","get_component_values","values","concat","console","log","Streamlit","events","addEventListener","RENDER_EVENT","event","detail","html","args","on","setComponentValue","setFrameHeight","setComponentReady"],"mappings":"sLAEO,SAASA,IACZ,IAAIC,EAAcC,IAAE,yBAAyBC,OACzCC,EAAgBF,IAAEG,MAAMF,OAExBG,EAAO,2BAAQL,GAAgBG,UAC5BE,EAAO,KAEd,IAAIC,EAAYD,EAAO,UAOvB,cANOA,EAAO,UAMP,CACH,IAAQ,yBACR,UAAcC,EACd,YAAgBD,EAChB,WARaJ,IAAEG,MAAMG,KAAK,kBAAkBC,KAAI,WAChD,MAAO,CAAC,CAACP,IAAEG,MAAMF,OAAQE,KAAKK,UAAUC,SAAS,kBAClDC,OAUA,SAASC,IACZ,IAAIC,EAAMC,OAAOC,eACjB,GAAIF,EAAK,CACL,IACIG,EAiCZ,SAA+BC,GAC3B,IAAIC,EAAOD,EAAME,eACbC,EAAUH,EAAMI,aAGpB,GAAIH,GAAQE,EACR,MAAO,CAACF,GAIZ,IAAII,EAAa,GACjB,KAAOJ,GAAQA,GAAQE,GACnBE,EAAWC,KAAKL,EAAOM,EAASN,IAIpCA,EAAOD,EAAME,eACb,KAAOD,GAAQA,GAAQD,EAAMQ,yBACzBH,EAAWI,QAAQR,GACnBA,EAAOA,EAAKS,WAGhB,OAAOL,EAvDiBM,CADRf,EAAIgB,WAAW,IAEvBC,EAAgB,GACpBd,EAAce,SAAQ,SAAAC,GAIlB,GAHIA,EAAQC,WAAaC,KAAKC,YAC1BH,EAAUA,EAAQL,YAElBK,EAAQC,WAAaC,KAAKE,cAAgBJ,EAAQvB,UAAUC,SAAS,iBAAkB,CACvF,GAAIoB,EAAcO,SAASL,GACvB,MAAO,GAEXF,EAAcP,KAAKS,GACnB/B,IAAE+B,GAASM,YAAY,iBAI/BzB,EAAI0B,mBAIZ,SAASf,EAASN,GACd,GAAIA,EAAKsB,gBACL,OAAOtB,EAAKuB,WAEZ,KAAOvB,IAASA,EAAKwB,aACjBxB,EAAOA,EAAKS,WAEhB,OAAKT,EAGEA,EAAKwB,YAFD,KChCZ,SAASC,IACZ,IAAI3C,EAAcC,IAAE,yBAAyBC,OACzCC,EAAgBF,IAAEG,MAAMF,OACxBG,EAAO,2BAAOL,GAAgBG,UAC3BE,EAAO,KAEd,IAAIC,EAAYD,EAAO,UAGvB,cAFOA,EAAO,UAEP,CACH,IAAQ,gBACR,UAAcC,EACd,KAASD,EACT,MAAUJ,IAAEG,MAAMwC,KAAK,YCzB/B,SAASC,IACL,IAAIC,EAAS,GAMb,OAJAA,GADAA,EAASA,EAAOC,OAAO9C,IAAE,2BAA2BO,IAAImC,GAAiBhC,QACzDoC,OAAO9C,IAAE,cAAcO,IAAIT,GAAkBY,OAG7DqC,QAAQC,IAAIH,GACLA,EAiCXI,IAAUC,OAAOC,iBAAiBF,IAAUG,cAT5C,SAAkBC,GACd,IAAMpD,EAAQoD,EAAkCC,OAChDtD,IAAE,WAAWuD,KAAKtD,EAAKuD,KAAL,MAClBT,QAAQC,IAAI,YAtCZhD,IAAE,cAAcyD,GAAG,UAAW9C,GAe9BX,IAAE,aAAayD,GAAG,SAAS,WACvB,IAAIZ,EAASD,IACbK,IAAUS,kBAAkB,CACxB,MAAS,EACT,MAAS,EACT,OAAWb,OAInB7C,IAAE,SAASyD,GAAG,SAAS,WACnB,IAAIZ,EAASD,IACbK,IAAUS,kBAAkB,CACxB,MAAS,EACT,MAAS,EACT,OAAWb,OAYnBI,IAAUU,oBAIdV,IAAUW,oBACVX,IAAUU,kB","file":"static/js/main.20bedad8.chunk.js","sourcesContent":["import $ from \"jquery\"\n\nexport function highlight_return() {\n    let common_data = $(\"div[data-type=common]\").data();\n    let specific_data = $(this).data();\n\n    let db_data = { ...common_data, ...specific_data };\n    delete db_data[\"type\"];\n\n    let tablename = db_data[\"tablename\"];\n    delete db_data[\"tablename\"];\n\n    let highlights = $(this).find(\".highlightable\").map(function() {\n        return [[$(this).data(), this.classList.contains(\"rationale\")]] // Wrapping in second [] because JQuery is stupid and will flatten everything\n    }).get();\n\n    return {\n        \"api\" : \"add_or_delete_multiple\",\n        \"tablename\" : tablename,\n        \"common_keys\" : db_data,\n        \"multi_keys\" : highlights\n    }\n} \n\nexport function highlight() {\n    var sel = window.getSelection();\n    if (sel) {\n        var range = sel.getRangeAt(0);\n        var selectedNodes = getRangeSelectedNodes(range);\n        var visited_nodes = [];\n        selectedNodes.forEach(element => {\n            if (element.nodeType === Node.TEXT_NODE) {\n                element = element.parentNode;\n            }\n            if (element.nodeType === Node.ELEMENT_NODE && element.classList.contains(\"highlightable\")) {\n                if (visited_nodes.includes(element)) {\n                    return [];\n                }\n                visited_nodes.push(element);\n                $(element).toggleClass(\"rationale\");\n            }\n        });\n\n        sel.removeAllRanges();\n    }\n};\n\nfunction nextNode(node) {\n    if (node.hasChildNodes()) {\n        return node.firstChild;\n    } else {\n        while (node && !node.nextSibling) {\n            node = node.parentNode;\n        }\n        if (!node) {\n            return null;\n        }\n        return node.nextSibling;\n    }\n}\n\nfunction getRangeSelectedNodes(range) {\n    var node = range.startContainer;\n    var endNode = range.endContainer;\n\n    // Special case for a range that is contained within a single node\n    if (node == endNode) {\n        return [node];\n    }\n\n    // Iterate nodes until we hit the end container\n    var rangeNodes = [];\n    while (node && node != endNode) {\n        rangeNodes.push(node = nextNode(node));\n    }\n\n    // Add partially selected nodes at the start of the range\n    node = range.startContainer;\n    while (node && node != range.commonAncestorContainer) {\n        rangeNodes.unshift(node);\n        node = node.parentNode;\n    }\n\n    return rangeNodes;\n}","import $ from \"jquery\"\n\nexport function select_return(element) {\n    let common_data = $(\"div[data-type=common]\").data();\n    let specific_data = $(this).data();\n    let db_data = {...common_data, ...specific_data};\n    delete db_data[\"type\"];\n\n    let tablename = db_data[\"tablename\"];\n    delete db_data[\"tablename\"]\n\n    db_data[\"value\"] = $(this).find(\":selected\").val()\n\n    return {\n        \"api\" : \"add_or_delete\",\n        \"tablename\" : tablename,\n        \"keys\" : db_data,\n        \"value\" : true\n    }\n    \n\n}\n\nexport function checkbox_return() {\n    let common_data = $(\"div[data-type=common]\").data();\n    let specific_data = $(this).data();\n    let db_data = {...common_data, ...specific_data};\n    delete db_data[\"type\"];\n\n    let tablename = db_data[\"tablename\"];\n    delete db_data[\"tablename\"]\n\n    return {\n        \"api\" : \"add_or_delete\",\n        \"tablename\" : tablename,\n        \"keys\" : db_data,\n        \"value\" : $(this).prop(\"checked\")\n    }\n}","import { Streamlit, RenderData } from \"streamlit-component-lib\"\nimport $ from \"jquery\"\nimport { highlight, highlight_return } from \"./highlight\"\nimport { checkbox_return, select_return } from \"./widgets\"\n\n\nfunction setup() {\n    $(\".highlight\").on(\"mouseup\", highlight);\n}\n\n\nfunction get_component_values() {\n    let values = [];\n    values = values.concat($(\"input[type=checkbox].db\").map(checkbox_return).get());\n    values = values.concat($(\".highlight\").map(highlight_return).get());\n    // values.concat($(\"select.db\").map(element => select_return(element)));\n\n    console.log(values);\n    return values;\n};\n\nfunction onstreamlitupdate() {\n    $(\"#savenext\").on(\"click\", function(){\n        let values = get_component_values();\n        Streamlit.setComponentValue({\n            \"done\" : true,\n            \"next\" : true,\n            \"values\" : values\n        })\n    });\n\n    $(\"#save\").on(\"click\", function(){\n        let values = get_component_values();\n        Streamlit.setComponentValue({\n            \"done\" : true,\n            \"next\" : false,\n            \"values\" : values\n        })\n    });\n    \n};\n\nfunction onRender(event: Event): void {\n    const data = (event as CustomEvent<RenderData>).detail\n    $(\"#docdiv\").html(data.args[\"data\"]);\n    console.log(\"Updating\");\n    setup();\n    onstreamlitupdate();\n    Streamlit.setFrameHeight()\n}\n\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\nStreamlit.setComponentReady()\nStreamlit.setFrameHeight()"],"sourceRoot":""}