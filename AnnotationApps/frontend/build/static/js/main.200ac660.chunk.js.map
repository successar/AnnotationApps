{"version":3,"sources":["mark.tsx","widgets.tsx","index.tsx"],"names":["highlight_return","common_data","$","data","specific_data","this","db_data","tablename","marked_spans","find","map","list","forEach","element","Object","entries","l","key","value","strkey","push","dictionary","get","attr","length","JSON","stringify","appendButtonToMark","mark_element","mark_button","document","createElement","on","rel_button_click","classList","add","innerHTML","appendChild","highlight","selected_nodes","sel","window","getSelection","selectedNodes","range","node","startContainer","endNode","endContainer","rangeNodes","nextNode","commonAncestorContainer","unshift","parentNode","getRangeSelectedNodes","getRangeAt","highlightable_nodes","nodeType","Node","TEXT_NODE","closest","contains","Array","from","Set","flat","marked_nodes","console","log","remove","contents","cnt","replaceWith","removeMarked","every","marked_range","Range","setStartBefore","setEndAfter","parent","span_type_radio_id","children","span_type","val","positions","parseInt","span_start","Math","min","span_end","max","surroundContents","removeAllRanges","e","block","other_clicked","other_mark","span_1_start","span_1_end","my_mark","span_2_start","span_2_end","relation","addClass","relation_mark_1","html","text","relation_mark_2","append","removeClass","blur","stopPropagation","hasChildNodes","firstChild","nextSibling","select_return","checkbox_return","prop","state","setup","each","index","get_component_values","values","concat","Streamlit","events","addEventListener","RENDER_EVENT","event","detail","args","setComponentValue","setFrameHeight","setComponentReady"],"mappings":"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","file":"static/js/main.200ac660.chunk.js","sourcesContent":["import $ from \"jquery\"\n\nexport function highlight_setup() {\n    $(\".highlight\").on(\"mouseup\", highlight);\n    $(\".highlight\").find(\"mark\").each((index, element) => appendButtonToMark(element));\n}\n\nexport function highlight_return() {\n    let common_data = $(\"div[data-type=common]\").data();\n    let specific_data = $(this).data();\n\n    let db_data = { ...common_data, ...specific_data };\n    delete db_data[\"type\"];\n\n    let tablename = db_data[\"tablename\"];\n    delete db_data[\"tablename\"];\n\n    let marked_spans = $(this).find(\"mark\").map(function () {\n        let data = $(this).find(\".highlightable\").map(function () {\n            return $(this).data();\n        }).get();\n\n        let map = dictionary(data);\n\n        map[\"span-start\"] = $(this).attr(\"data-span-start\");\n        map[\"span-end\"] = $(this).attr(\"data-span-end\");\n\n        delete map[\"block_pos\"];\n\n        map[\"span-type\"] = $(this).attr(\"data-span-type\");\n\n        return map;\n    }).get();\n\n    let api = (marked_spans.length > 0) ? \"add\" : \"delete\";\n\n    return {\n        \"api\": api,\n        \"tablename\": tablename,\n        \"keys\": db_data,\n        \"value\": JSON.stringify(marked_spans)\n    }\n}\n\nfunction dictionary(list) {\n    var map = {};\n    list.forEach(element => {\n        Object.entries(element).forEach(([key, value], l) => {\n            let strkey = (key as unknown) as string\n            if (!map[strkey]) {\n                map[strkey] = [];\n            }\n            map[strkey].push(value);\n        })\n    });\n\n    return map;\n}\n\nfunction appendButtonToMark(mark_element) {\n    let mark_button = document.createElement(\"button\");\n    $(mark_button).on(\"click\", rel_button_click);\n    mark_button.classList.add(\"btn\", \"btn-success\", \"rel-button\");\n    mark_button.innerHTML = $(mark_element).attr(\"data-span-type\");\n    mark_element.appendChild(mark_button);\n}\n\nexport function highlight() {\n    var sel = window.getSelection();\n    if (sel) {\n        var range = sel.getRangeAt(0);\n        var selectedNodes = getRangeSelectedNodes(range);\n        let highlightable_nodes: Array<Node> = filter_to_highlightable(selectedNodes);\n        removeMarked(highlightable_nodes);\n        if (highlightable_nodes.length > 0 && highlightable_nodes.every(node => node.parentNode === highlightable_nodes[0].parentNode)) {\n            let marked_range = new Range();\n            marked_range.setStartBefore(highlightable_nodes[0]);\n            marked_range.setEndAfter(highlightable_nodes[highlightable_nodes.length - 1]);\n\n            // Create a Mark element to surround the selection\n            let mark_element = document.createElement(\"mark\");\n\n            // Add Span Type to the Mark\n            let parent = highlightable_nodes[0].parentNode;\n            let span_type_radio_id = $(parent).children(\"div[data-type=type-selector]\").attr(\"data-radio-id\");\n            let span_type: string = ($(`input[name=${span_type_radio_id}]:checked`).val() as string);\n            span_type = span_type ? span_type : \"UNK\";\n            $(mark_element).attr(\"data-span-type\", span_type);\n\n            // Calculate Span Start and Span End Positions \n            let positions = highlightable_nodes.map(node => parseInt($(node).attr(\"data-block_pos\")));\n            let span_start = Math.min(...positions);\n            let span_end = Math.max(...positions) + 1;\n\n            $(mark_element).attr(\"data-span-start\", span_start);\n            $(mark_element).attr(\"data-span-end\", span_end);\n\n            marked_range.surroundContents(mark_element);\n            appendButtonToMark(mark_element);\n        }\n\n        sel.removeAllRanges();\n    }\n};\n\nfunction rel_button_click(e: Event) {\n    let block = $(this).closest(\".highlight\").get(0); // Find which block it lives in\n    if (block) {\n        let other_clicked = $(block).find(\"button.clicked\").get(0); // Find if another span is already clicked.\n        if (other_clicked) {\n            let other_mark = $(other_clicked).closest(\"mark\").get(0);\n            let span_1_start = $(other_mark).attr(\"data-span-start\");\n            let span_1_end = $(other_mark).attr(\"data-span-end\");\n\n            let my_mark = $(this).closest(\"mark\").get(0);\n            let span_2_start = $(my_mark).attr(\"data-span-start\");\n            let span_2_end = $(my_mark).attr(\"data-span-end\");\n\n            let relation = $(document.createElement(\"div\"));\n            relation.addClass(\"relation\");\n            relation.attr(\"data-span-a-start\", span_1_start);\n            relation.attr(\"data-span-a-end\", span_1_end);\n            relation.attr(\"data-span-b-start\", span_2_start);\n            relation.attr(\"data-span-b-end\", span_2_end);\n\n            let relation_mark_1 = $(document.createElement(\"span\"));\n            relation_mark_1.addClass(\"rel-mark\");\n            relation_mark_1.html($(other_mark).find(\".highlightable\").text());\n            \n            let relation_mark_2 = $(document.createElement(\"span\"));\n            relation_mark_2.addClass(\"rel-mark\");\n            relation_mark_2.html($(my_mark).find(\".highlightable\").text());\n\n            relation.append(relation_mark_1);\n            relation.append(\" - \");\n            relation.append(relation_mark_2);\n\n            $(block).find(\"div[data-type=relation-area]\").append(relation);\n            $(other_clicked).removeClass(\"clicked\");\n        }\n        else {\n            $(this).addClass(\"clicked\");\n            $(this).blur(); // lose focus immediately so css rendering can occur\n        }\n    }\n    e.stopPropagation();\n}\n\nfunction nextNode(node) {\n    if (node.hasChildNodes()) {\n        return node.firstChild;\n    } else {\n        while (node && !node.nextSibling) {\n            node = node.parentNode;\n        }\n        if (!node) {\n            return null;\n        }\n        return node.nextSibling;\n    }\n}\n\nfunction getRangeSelectedNodes(range) {\n    var node = range.startContainer;\n    var endNode = range.endContainer;\n\n    // Special case for a range that is contained within a single node\n    if (node == endNode) {\n        return [node];\n    }\n\n    // Iterate nodes until we hit the end container\n    var rangeNodes = [];\n    while (node && node != endNode) {\n        rangeNodes.push(node = nextNode(node));\n    }\n\n    // Add partially selected nodes at the start of the range\n    node = range.startContainer;\n    while (node && node != range.commonAncestorContainer) {\n        rangeNodes.unshift(node);\n        node = node.parentNode;\n    }\n\n    return rangeNodes;\n}\n\nfunction filter_to_highlightable(selected_nodes): Array<Node> {\n    selected_nodes = selected_nodes.map(node => {\n        if (node.nodeType === Node.TEXT_NODE) {\n            node = node.parentNode;\n            node = $(node).closest(\".highlightable\");\n            node = node ? node.get(0) : node;\n        }\n\n        if (node && node.classList.contains(\"highlightable\")) {\n            return [node];\n        }\n        else {\n            return [];\n        }\n    });\n\n    return Array.from(new Set(selected_nodes.flat()));\n}\n\nfunction removeMarked(selected_nodes) {\n    let marked_nodes = selected_nodes.map(element => {\n        return $(element).closest(\"mark\");\n    });\n\n    marked_nodes = Array.from(new Set(marked_nodes.flat()));\n\n    marked_nodes.forEach(element => {\n        console.log(element);\n        $(element).find(\"button\").remove();\n        console.log($(element).contents());\n        var cnt = $(element).contents();\n        $(element).replaceWith(cnt);\n    })\n}","import $ from \"jquery\"\n\nexport function select_return() {\n    let common_data = $(\"div[data-type=common]\").data();\n    let specific_data = $(this).data();\n    let db_data = { ...common_data, ...specific_data };\n    delete db_data[\"type\"];\n\n    let tablename = db_data[\"tablename\"];\n    delete db_data[\"tablename\"]\n\n    return {\n        \"api\": $(this).find(\":selected\").val() ? \"add\" : \"delete\",\n        \"tablename\": tablename,\n        \"keys\": db_data,\n        \"value\": $(this).find(\":selected\").val()\n    }\n}\n\nexport function checkbox_return() {\n    let common_data = $(\"div[data-type=common]\").data();\n    let specific_data = $(this).data();\n    let db_data = { ...common_data, ...specific_data };\n    delete db_data[\"type\"];\n\n    let tablename = db_data[\"tablename\"];\n    delete db_data[\"tablename\"]\n\n    return {\n        \"api\": $(this).prop(\"checked\") ? \"add\" : \"delete\",\n        \"tablename\": tablename,\n        \"keys\": db_data,\n        \"value\": 1\n    }\n}","import { Streamlit, RenderData } from \"streamlit-component-lib\"\nimport $ from \"jquery\"\nimport { highlight_return, highlight_setup } from \"./mark\"\nimport { checkbox_return, select_return } from \"./widgets\"\n\nlet state = \"idle\";\n\nfunction setup() {\n    highlight_setup();\n}\n\n\nfunction get_component_values() {\n    let values = [];\n    values = values.concat($(\"input[type=checkbox].db\").map(checkbox_return).get());\n    values = values.concat($(\".highlight\").map(highlight_return).get());\n    values = values.concat($(\"select.db\").map(select_return).get());\n    return values;\n};\n\nfunction onstreamlitupdate() {\n    $(\"#savenext\").on(\"click\", function(){\n        let values = get_component_values();\n        Streamlit.setComponentValue({\n            \"done\" : true,\n            \"next\" : true,\n            \"values\" : values\n        });\n\n        state = \"clicked\";\n    });\n\n    $(\"#save\").on(\"click\", function(){\n        let values = get_component_values();\n        Streamlit.setComponentValue({\n            \"done\" : true,\n            \"next\" : false,\n            \"values\" : values\n        });\n        state = \"clicked\";\n    });\n};\n\nfunction onRender(event: Event): void {\n    const data = (event as CustomEvent<RenderData>).detail\n    if (state == \"clicked\") {\n        state = \"idle\";\n        $(\"#docdiv\").html(\"\");\n        return;\n    }\n    $(\"#docdiv\").html(data.args[\"data\"]);\n    $(\"#head-style\").append(data.args[\"css\"]);\n    setup();\n    onstreamlitupdate();\n    Streamlit.setFrameHeight()\n}\n\nStreamlit.events.addEventListener(Streamlit.RENDER_EVENT, onRender)\nStreamlit.setComponentReady()\nStreamlit.setFrameHeight()"],"sourceRoot":""}